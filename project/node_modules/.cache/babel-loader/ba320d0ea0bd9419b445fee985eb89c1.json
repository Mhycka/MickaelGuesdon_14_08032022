{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guesd\\\\OneDrive\\\\Documents\\\\GitHub\\\\MickaelGuesdon_14_0803202\\\\project\\\\src\\\\Addon\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.scss';\nimport RowTr from './row';\nimport ShowEntries from './Entries';\nimport DataTableFooter from './footer';\nimport DataTableHead from './Header';\nimport DataTableSearch from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\n/**Table component\r\n * @param {array} label - col names of the table\r\n * @param {array} data - data to display in the table\r\n */\n\nfunction DataTables(_ref) {\n  _s();\n\n  let {\n    label,\n    data\n  } = _ref;\n  const [employees, setEmployees] = useState(data);\n  const [showEntries, setShowEntries] = useState(10);\n  const [indexPages, setIndexPages] = useState(1); //control the .map() with slice \n\n  const sliceBegin = indexPages * showEntries - showEntries;\n  const sliceEnd = indexPages * showEntries;\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      label: label,\n      employees: employees,\n      setEmployees: setEmployees,\n      showEntries: showEntries,\n      setShowEntries: setShowEntries,\n      indexPages: indexPages,\n      setIndexPages: setIndexPages,\n      sliceBegin: sliceBegin,\n      sliceEnd: sliceEnd\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataTablesWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTablesTop\",\n        children: [/*#__PURE__*/_jsxDEV(ShowEntries, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataTableSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"dataTableBody\",\n        children: [/*#__PURE__*/_jsxDEV(DataTableHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }, this), employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.slice(sliceBegin, sliceEnd).map((employee, index) => /*#__PURE__*/_jsxDEV(RowTr, {\n            data: employee\n          }, index + employee.lastName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"datatableEmpty\",\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"9\",\n              children: \"the database is empty !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DataTableFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataTables, \"N2GIbjhjNsVEmF3UmQ/nMuB8bOo=\");\n\n_c = DataTables;\nexport default DataTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTables\");","map":{"version":3,"sources":["C:/Users/guesd/OneDrive/Documents/GitHub/MickaelGuesdon_14_0803202/project/src/Addon/App.js"],"names":["React","useState","RowTr","ShowEntries","DataTableFooter","DataTableHead","DataTableSearch","UserContext","createContext","DataTables","label","data","employees","setEmployees","showEntries","setShowEntries","indexPages","setIndexPages","sliceBegin","sliceEnd","length","slice","map","employee","index","lastName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,eAAP,MAA4B,UAA5B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,eAAP,MAA4B,UAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,EAApB;AAEP;AACA;AACA;AACA;;AACA,SAASC,UAAT,OAAkC;AAAA;;AAAA,MAAd;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAc;AAE9B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA0BZ,QAAQ,CAACU,IAAD,CAAxC;AACA,QAAM,CAACG,WAAD,EAAaC,cAAb,IAA6Bd,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACe,UAAD,EAAYC,aAAZ,IAA2BhB,QAAQ,CAAC,CAAD,CAAzC,CAJ8B,CAM9B;;AACA,QAAMiB,UAAU,GAAEF,UAAU,GAACF,WAAX,GAAuBA,WAAzC;AACA,QAAMK,QAAQ,GAAEH,UAAU,GAACF,WAA3B;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACJ,MAAAA,KAAK,EAACA,KAAP;AAAaE,MAAAA,SAAS,EAACA,SAAvB;AAAiCC,MAAAA,YAAY,EAACA,YAA9C;AAA2DC,MAAAA,WAAW,EAACA,WAAvE;AAAmFC,MAAAA,cAAc,EAACA,cAAlG;AAAiHC,MAAAA,UAAU,EAACA,UAA5H;AAAuIC,MAAAA,aAAa,EAACA,aAArJ;AAAmKC,MAAAA,UAAU,EAACA,UAA9K;AAAyLC,MAAAA,QAAQ,EAACA;AAAlM,KAA7B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKQ;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,gCACG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADH,EAEKP,SAAS,CAACQ,MAAV,GAAiB,CAAjB,gBACG;AAAA,oBACKR,SAAS,CAACS,KAAV,CAAgBH,UAAhB,EAA2BC,QAA3B,EAAqCG,GAArC,CAAyC,CAACC,QAAD,EAAUC,KAAV,kBACtC,QAAC,KAAD;AAAqC,YAAA,IAAI,EAAED;AAA3C,aAAYC,KAAK,GAACD,QAAQ,CAACE,QAA3B;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH,gBAME;AAAA,iCAAO;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,mCAA+B;AAAK,cAAA,OAAO,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBARP;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,eAeQ,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA/BQhB,U;;KAAAA,U;AAiCT,eAAeA,UAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport './App.scss';\r\nimport RowTr from './row';\r\nimport ShowEntries from './Entries';\r\nimport DataTableFooter from './footer';\r\nimport DataTableHead from './Header';\r\nimport DataTableSearch from './Search';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\n/**Table component\r\n * @param {array} label - col names of the table\r\n * @param {array} data - data to display in the table\r\n */\r\nfunction DataTables({label,data}) {\r\n    \r\n    const [employees,setEmployees]= useState(data)\r\n    const [showEntries,setShowEntries]=useState(10)\r\n    const [indexPages,setIndexPages]=useState(1)\r\n \r\n    //control the .map() with slice \r\n    const sliceBegin= indexPages*showEntries-showEntries\r\n    const sliceEnd= indexPages*showEntries\r\n\r\n    return(\r\n        <UserContext.Provider value={{label:label,employees:employees,setEmployees:setEmployees,showEntries:showEntries,setShowEntries:setShowEntries,indexPages:indexPages,setIndexPages:setIndexPages,sliceBegin:sliceBegin,sliceEnd:sliceEnd}}>\r\n            <div className=\"dataTablesWrapper\">\r\n                <div className=\"dataTablesTop\">\r\n                    <ShowEntries />\r\n                    <DataTableSearch />\r\n                </div>\r\n                    <table className=\"dataTableBody\">\r\n                       <DataTableHead />\r\n                        {employees.length>0 ?(\r\n                            <tbody>\r\n                                {employees.slice(sliceBegin,sliceEnd).map((employee,index)=>\r\n                                    <RowTr key={index+employee.lastName} data={employee} />\r\n                                )}\r\n                           </tbody>):(\r\n                           <tbody><tr className=\"datatableEmpty\"><th  colSpan=\"9\">the database is empty !</th></tr></tbody>)}\r\n                    </table>\r\n                    <DataTableFooter/>\r\n            </div>\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataTables"]},"metadata":{},"sourceType":"module"}