{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guesd\\\\OneDrive\\\\Documents\\\\GitHub\\\\MickaelGuesdon_14_0803202\\\\project\\\\src\\\\Addon\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UserContext } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const value = React.useContext(UserContext); //make a copy of the state as a backup,  useful when the search is closed to show all the data\n\n  const [employeesCopy] = useState(value.employees); //compare the search value with the data.values()\n\n  function handleChange(e) {\n    if (e.target.value.length > 1) {\n      value.setIndexPages(1);\n      var dataToDisplay = employeesCopy.filter(employee => {\n        var values = Object.values(employee).map(val => {\n          return val.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n        }).join(' ');\n        return values.includes(e.target.value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase());\n      });\n      value.setEmployees(dataToDisplay);\n    } else {\n      value.setEmployees(employeesCopy);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Search:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      className: \"datatableSearchInput\",\n      placeholder: \"\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"LJEorI7nK0hFAWn3J3KLt712x1g=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/guesd/OneDrive/Documents/GitHub/MickaelGuesdon_14_0803202/project/src/Addon/Search.js"],"names":["React","useState","UserContext","Search","value","useContext","employeesCopy","employees","handleChange","e","target","length","setIndexPages","dataToDisplay","filter","employee","values","Object","map","val","normalize","replace","toLowerCase","join","includes","setEmployees"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,WAAT,QAA2B,OAA3B;;;AAGA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAMC,KAAK,GAAGJ,KAAK,CAACK,UAAN,CAAiBH,WAAjB,CAAd,CADa,CAGb;;AACA,QAAM,CAACI,aAAD,IAAkBL,QAAQ,CAACG,KAAK,CAACG,SAAP,CAAhC,CAJa,CAOb;;AACA,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACpB,QAAGA,CAAC,CAACC,MAAF,CAASN,KAAT,CAAeO,MAAf,GAAsB,CAAzB,EAA2B;AACvBP,MAAAA,KAAK,CAACQ,aAAN,CAAoB,CAApB;AACA,UAAIC,aAAa,GAAEP,aAAa,CAACQ,MAAd,CAAsBC,QAAD,IAAY;AAC/C,YAAIC,MAAM,GAACC,MAAM,CAACD,MAAP,CAAcD,QAAd,EAAwBG,GAAxB,CAA8BC,GAAD,IAAO;AAC5C,iBAAOA,GAAG,CAACC,SAAJ,CAAc,KAAd,EAAqBC,OAArB,CAA6B,kBAA7B,EAAiD,EAAjD,EAAqDC,WAArD,EAAP;AACH,SAFW,EAETC,IAFS,CAEJ,GAFI,CAAX;AAGD,eAAOP,MAAM,CAACQ,QAAP,CAAgBf,CAAC,CAACC,MAAF,CAASN,KAAT,CAAegB,SAAf,CAAyB,KAAzB,EAAgCC,OAAhC,CAAwC,kBAAxC,EAA4D,EAA5D,EAAgEC,WAAhE,EAAhB,CAAP;AACH,OALkB,CAAnB;AAMAlB,MAAAA,KAAK,CAACqB,YAAN,CAAmBZ,aAAnB;AAEH,KAVD,MAUM;AACFT,MAAAA,KAAK,CAACqB,YAAN,CAAmBnB,aAAnB;AACH;AACJ;;AAED,sBACI;AAAA,uCACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,sBAA/B;AAAsD,MAAA,WAAW,EAAC,EAAlE;AAAqE,MAAA,QAAQ,EAAEE;AAA/E;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BQL,M;;KAAAA,M;AA+BT,eAAgBA,MAAhB","sourcesContent":["import React,{useState} from 'react'\r\nimport { UserContext} from './App'\r\n\r\n\r\nfunction Search(){\r\n    const value = React.useContext(UserContext); \r\n\r\n    //make a copy of the state as a backup,  useful when the search is closed to show all the data\r\n    const [employeesCopy] = useState(value.employees)\r\n\r\n  \r\n    //compare the search value with the data.values()\r\n    function handleChange(e){\r\n        if(e.target.value.length>1){\r\n            value.setIndexPages(1)\r\n            var dataToDisplay= employeesCopy.filter((employee)=>{\r\n                 var values=Object.values(employee).map( (val)=>{\r\n                    return val.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase()\r\n                }).join(' ');\r\n                return values.includes(e.target.value.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase());\r\n            })\r\n            value.setEmployees(dataToDisplay)\r\n           \r\n        }else {\r\n            value.setEmployees(employeesCopy)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <label>Search: \r\n            <input type=\"search\" className=\"datatableSearchInput\" placeholder=\"\" onChange={handleChange} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport  default Search"]},"metadata":{},"sourceType":"module"}